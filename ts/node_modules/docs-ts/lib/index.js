"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = exports.compilerOptions = exports.exit = void 0;
/**
 * @since 0.2.0
 */
var chalk_1 = require("chalk");
var Console_1 = require("fp-ts/Console");
var IO = require("fp-ts/IO");
var pipeable_1 = require("fp-ts/pipeable");
var T = require("fp-ts/Task");
var TE = require("fp-ts/TaskEither");
var ast = require("ts-morph");
var Core = require("./Core");
var Parser = require("./Parser");
var Example_1 = require("./Example");
var FileSystem_1 = require("./FileSystem");
var Logger_1 = require("./Logger");
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
var exitProcess = function (code) { return function () { return process.exit(code); }; };
var onLeft = function (e) {
    return T.fromIO(pipeable_1.pipe(Console_1.log(chalk_1.default.bold.red(e)), IO.chain(function () { return exitProcess(1); })));
};
var onRight = pipeable_1.pipe(T.fromIO(Console_1.log(chalk_1.default.bold.green('Docs generation succeeded!'))), T.chain(function () { return T.fromIO(exitProcess(0)); }));
/**
 * @category utils
 * @since 0.6.0
 */
exports.exit = TE.fold(onLeft, function () { return onRight; });
/**
 * @internal
 */
exports.compilerOptions = {
    strict: true
};
var capabilities = {
    example: Example_1.Example,
    fileSystem: FileSystem_1.FileSystem,
    logger: Logger_1.Logger,
    ast: {
        project: new ast.Project({
            compilerOptions: exports.compilerOptions
        }),
        addFile: Parser.addFileToProject
    }
};
/**
 * @category utils
 * @since 0.6.0
 */
exports.main = pipeable_1.pipe(Core.main(capabilities), exports.exit);
